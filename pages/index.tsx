import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { SelectCountry, SelectCity, SelectLanguage, BreadCrumbs, Login, Main, Button } from '../components';
import { Countries, Languages, LanguageTranslation, Users } from '../models';
import { useRouter } from 'next/router';
import { GetStaticProps, GetStaticPropsContext } from 'next';
import { ParsedUrlQuery } from 'querystring';
import { CountriesInterface, LanguagesInterface, LanguageTranslationInterface } from '../interfaces';
import { ML, LS } from '../globals';
import { useEffect, useState } from 'react';
import { useSession } from "next-auth/react"
import Link from 'next/link';




export const getStaticProps: GetStaticProps = async ({ params }: GetStaticPropsContext<ParsedUrlQuery>) => {
	const countriesDb = await Countries.getAll();
	const languagesDb = await Languages.getAll();
	const textDb = await ML.getTranslationText();
	

	let listCountries: string[] = [];
	let listLanguages: string[] = [];
	let text = {};
	if (countriesDb && languagesDb && textDb) {
		listCountries = countriesDb.data
		listLanguages = languagesDb.data
		text = textDb
	}

	

	return {
		props: {
			listCountries,
			listLanguages,
			text
		}
	};
};




export default function Home({ listCountries, listLanguages, text }: HomeProps): JSX.Element {
	const router = useRouter();
	const routerQuery = router.query as {[key:string]: string};

	
	const [textTranslation, setTextTranslation] = useState<{[key:string]: string}>({});

	const updateLanguage = async () => {
		// console.log('--==listLanguages', listLanguages);
		const currentTranslationText = await ML.getChangeTranslationText(text, null)
		setTextTranslation(currentTranslationText);
	}

	useEffect(() => {
		ML.setLanguageByBrowser(listLanguages);
		updateLanguage();
	}, []);

	(
		async () =>  {

			// const usersDb = await Users.getByEmail('uuu8001uuu@gmail.com');
			// console.log('===createUser-return', usersDb.data);


		}
	)();
	

	// const { dataSession } = useSession();
  return (
		<Main>
			<Login/>
			{/* {console.log('---listCountries', listCountries)} */}
			<BreadCrumbs currentRoute={routerQuery} text={textTranslation} />
			111
			<SelectLanguage listLanguages={listLanguages} text={textTranslation} updateLanguage={() => updateLanguage()}  country={null}></SelectLanguage>
			111
			<SelectCountry listCountries={listCountries} listLanguages={listLanguages} text={textTranslation}></SelectCountry>
			111
			<Button  name="Предложить встречу" onClick={() => {router.push({pathname: '/propose-meeting'})}} />
			<Button  name="Ваши встречи" onClick={() => {router.push({pathname: '/your-meetings'})}} />
		</Main>
    // <div className={styles.container}>
    //   <Head>
    //     <title>Create Next App</title>
    //     <meta name="description" content="Generated by create next app" />
    //     <link rel="icon" href="/favicon.ico" />
    //   </Head>

    //   <main className={styles.main}>
    //     <h1 className={styles.title}>
    //       Welcome to <a href="https://nextjs.org">Next.js!</a>
    //     </h1>

    //     <p className={styles.description}>
    //       Get started by editing{' '}
    //       <code className={styles.code}>pages/index.tsx</code>
    //     </p>

    //     <div className={styles.grid}>
    //       <a href="https://nextjs.org/docs" className={styles.card}>
    //         <h2>Documentation &rarr;</h2>
    //         <p>Find in-depth information about Next.js features and API.</p>
    //       </a>

    //       <a href="https://nextjs.org/learn" className={styles.card}>
    //         <h2>Learn &rarr;</h2>
    //         <p>Learn about Next.js in an interactive course with quizzes!</p>
    //       </a>

    //       <a
    //         href="https://github.com/vercel/next.js/tree/canary/examples"
    //         className={styles.card}
    //       >
    //         <h2>Examples &rarr;</h2>
    //         <p>Discover and deploy boilerplate example Next.js projects.</p>
    //       </a>

    //       <a
    //         href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
    //         target="_blank"
    //         rel="noopener noreferrer"
    //         className={styles.card}
    //       >
    //         <h2>Deploy &rarr;</h2>
    //         <p>
    //           Instantly deploy your Next.js site to a public URL with Vercel.
    //         </p>
    //       </a>
    //     </div>
    //   </main>

    //   <footer className={styles.footer}>
    //     <a
    //       href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
    //       target="_blank"
    //       rel="noopener noreferrer"
    //     >
    //       Powered by{' '}
    //       <span className={styles.logo}>
    //         <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
    //       </span>
    //     </a>
    //   </footer>
    // </div>
  )
}

interface HomeProps {
	listCountries: CountriesInterface.Country[];
	listLanguages: LanguagesInterface.Languages[];
	text: LanguageTranslationInterface.Translation[];
}